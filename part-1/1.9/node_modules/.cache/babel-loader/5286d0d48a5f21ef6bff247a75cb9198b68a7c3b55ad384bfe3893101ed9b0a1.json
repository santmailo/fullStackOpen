{"ast":null,"code":"var _jsxFileName = \"D:\\\\FullStackOpen\\\\part-1\\\\1.8\\\\src\\\\components\\\\statistic.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistic = ({\n  good,\n  neutral,\n  bad\n}) => {\n  if (good || neutral || bad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Good: \", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Neutral: \", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bad: \", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"All: \", good + neutral + bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average: \", (good + neutral + bad) / 3]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Positive: \", 0 | good / (good + neutral + bad) * 100]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n};\n_c = Statistic;\nexport default Statistic;\nvar _c;\n$RefreshReg$(_c, \"Statistic\");","map":{"version":3,"names":["Statistic","good","neutral","bad","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FullStackOpen/part-1/1.8/src/components/statistic.jsx"],"sourcesContent":["\r\n\r\nconst Statistic = ({ good, neutral, bad }) => {\r\n    if(good || neutral || bad)\r\n    {\r\n        return (\r\n            <div>\r\n                <p>Good: {good}</p>\r\n                <p>Neutral: {neutral}</p>\r\n                <p>Bad: {bad}</p>\r\n                <p>All: {good+neutral+bad}</p>\r\n                <p>Average: {(good+neutral+bad)/3}</p>\r\n                <p> Positive: {0 | (((good) / (good+neutral+bad) )* 100)}</p>     \r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <p>No feedback given</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Statistic;"],"mappings":";;AAEA,MAAMA,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAI,CAAC,KAAK;EAC1C,IAAGF,IAAI,IAAIC,OAAO,IAAIC,GAAG,EACzB;IACI,oBACIC,OAAA;MAAAC,QAAA,gBACID,OAAA;QAAAC,QAAA,GAAG,QAAM,EAACJ,IAAI;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBL,OAAA;QAAAC,QAAA,GAAG,WAAS,EAACH,OAAO;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBL,OAAA;QAAAC,QAAA,GAAG,OAAK,EAACF,GAAG;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBL,OAAA;QAAAC,QAAA,GAAG,OAAK,EAACJ,IAAI,GAACC,OAAO,GAACC,GAAG;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BL,OAAA;QAAAC,QAAA,GAAG,WAAS,EAAC,CAACJ,IAAI,GAACC,OAAO,GAACC,GAAG,IAAE,CAAC;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCL,OAAA;QAAAC,QAAA,GAAG,aAAW,EAAC,CAAC,GAAMJ,IAAI,IAAKA,IAAI,GAACC,OAAO,GAACC,GAAG,CAAC,GAAI,GAAI;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAEd,CAAC,MACG;IACA,oBACIL,OAAA;MAAAC,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAEhC;AACJ,CAAC;AAAAC,EAAA,GAnBKV,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}